// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hello.proto

package com.future.other.protocol;

public final class Hello {
  private Hello() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ProtocolTypesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ProtocolTypes)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double doubleV = 1;</code>
     * @return The doubleV.
     */
    double getDoubleV();

    /**
     * <code>float floatv = 2;</code>
     * @return The floatv.
     */
    float getFloatv();

    /**
     * <code>int32 int32v = 3;</code>
     * @return The int32v.
     */
    int getInt32V();

    /**
     * <code>int32 largeseq = 245;</code>
     * @return The largeseq.
     */
    int getLargeseq();

    /**
     * <code>int64 int64v = 4;</code>
     * @return The int64v.
     */
    long getInt64V();

    /**
     * <code>uint32 uint32v = 5;</code>
     * @return The uint32v.
     */
    int getUint32V();

    /**
     * <code>uint64 uint64v = 6;</code>
     * @return The uint64v.
     */
    long getUint64V();

    /**
     * <code>sint32 sint32v = 7;</code>
     * @return The sint32v.
     */
    int getSint32V();

    /**
     * <code>sint64 sint64v = 8;</code>
     * @return The sint64v.
     */
    long getSint64V();

    /**
     * <code>fixed32 fixed32v = 9;</code>
     * @return The fixed32v.
     */
    int getFixed32V();

    /**
     * <code>fixed64 fixed64v = 10;</code>
     * @return The fixed64v.
     */
    long getFixed64V();

    /**
     * <code>sfixed32 sfixed32v = 11;</code>
     * @return The sfixed32v.
     */
    int getSfixed32V();

    /**
     * <code>sfixed64 sfixed64v = 12;</code>
     * @return The sfixed64v.
     */
    long getSfixed64V();

    /**
     * <code>bool boolv = 13;</code>
     * @return The boolv.
     */
    boolean getBoolv();

    /**
     * <code>string stringv = 14;</code>
     * @return The stringv.
     */
    java.lang.String getStringv();
    /**
     * <code>string stringv = 14;</code>
     * @return The bytes for stringv.
     */
    com.google.protobuf.ByteString
        getStringvBytes();

    /**
     * <code>bytes bytesv = 15;</code>
     * @return The bytesv.
     */
    com.google.protobuf.ByteString getBytesv();
  }
  /**
   * Protobuf type {@code ProtocolTypes}
   */
  public static final class ProtocolTypes extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ProtocolTypes)
      ProtocolTypesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProtocolTypes.newBuilder() to construct.
    private ProtocolTypes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProtocolTypes() {
      stringv_ = "";
      bytesv_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProtocolTypes();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProtocolTypes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              doubleV_ = input.readDouble();
              break;
            }
            case 21: {

              floatv_ = input.readFloat();
              break;
            }
            case 24: {

              int32V_ = input.readInt32();
              break;
            }
            case 32: {

              int64V_ = input.readInt64();
              break;
            }
            case 40: {

              uint32V_ = input.readUInt32();
              break;
            }
            case 48: {

              uint64V_ = input.readUInt64();
              break;
            }
            case 56: {

              sint32V_ = input.readSInt32();
              break;
            }
            case 64: {

              sint64V_ = input.readSInt64();
              break;
            }
            case 77: {

              fixed32V_ = input.readFixed32();
              break;
            }
            case 81: {

              fixed64V_ = input.readFixed64();
              break;
            }
            case 93: {

              sfixed32V_ = input.readSFixed32();
              break;
            }
            case 97: {

              sfixed64V_ = input.readSFixed64();
              break;
            }
            case 104: {

              boolv_ = input.readBool();
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              stringv_ = s;
              break;
            }
            case 122: {

              bytesv_ = input.readBytes();
              break;
            }
            case 1960: {

              largeseq_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.future.other.protocol.Hello.internal_static_ProtocolTypes_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.future.other.protocol.Hello.internal_static_ProtocolTypes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.future.other.protocol.Hello.ProtocolTypes.class, com.future.other.protocol.Hello.ProtocolTypes.Builder.class);
    }

    public static final int DOUBLEV_FIELD_NUMBER = 1;
    private double doubleV_;
    /**
     * <code>double doubleV = 1;</code>
     * @return The doubleV.
     */
    @java.lang.Override
    public double getDoubleV() {
      return doubleV_;
    }

    public static final int FLOATV_FIELD_NUMBER = 2;
    private float floatv_;
    /**
     * <code>float floatv = 2;</code>
     * @return The floatv.
     */
    @java.lang.Override
    public float getFloatv() {
      return floatv_;
    }

    public static final int INT32V_FIELD_NUMBER = 3;
    private int int32V_;
    /**
     * <code>int32 int32v = 3;</code>
     * @return The int32v.
     */
    @java.lang.Override
    public int getInt32V() {
      return int32V_;
    }

    public static final int LARGESEQ_FIELD_NUMBER = 245;
    private int largeseq_;
    /**
     * <code>int32 largeseq = 245;</code>
     * @return The largeseq.
     */
    @java.lang.Override
    public int getLargeseq() {
      return largeseq_;
    }

    public static final int INT64V_FIELD_NUMBER = 4;
    private long int64V_;
    /**
     * <code>int64 int64v = 4;</code>
     * @return The int64v.
     */
    @java.lang.Override
    public long getInt64V() {
      return int64V_;
    }

    public static final int UINT32V_FIELD_NUMBER = 5;
    private int uint32V_;
    /**
     * <code>uint32 uint32v = 5;</code>
     * @return The uint32v.
     */
    @java.lang.Override
    public int getUint32V() {
      return uint32V_;
    }

    public static final int UINT64V_FIELD_NUMBER = 6;
    private long uint64V_;
    /**
     * <code>uint64 uint64v = 6;</code>
     * @return The uint64v.
     */
    @java.lang.Override
    public long getUint64V() {
      return uint64V_;
    }

    public static final int SINT32V_FIELD_NUMBER = 7;
    private int sint32V_;
    /**
     * <code>sint32 sint32v = 7;</code>
     * @return The sint32v.
     */
    @java.lang.Override
    public int getSint32V() {
      return sint32V_;
    }

    public static final int SINT64V_FIELD_NUMBER = 8;
    private long sint64V_;
    /**
     * <code>sint64 sint64v = 8;</code>
     * @return The sint64v.
     */
    @java.lang.Override
    public long getSint64V() {
      return sint64V_;
    }

    public static final int FIXED32V_FIELD_NUMBER = 9;
    private int fixed32V_;
    /**
     * <code>fixed32 fixed32v = 9;</code>
     * @return The fixed32v.
     */
    @java.lang.Override
    public int getFixed32V() {
      return fixed32V_;
    }

    public static final int FIXED64V_FIELD_NUMBER = 10;
    private long fixed64V_;
    /**
     * <code>fixed64 fixed64v = 10;</code>
     * @return The fixed64v.
     */
    @java.lang.Override
    public long getFixed64V() {
      return fixed64V_;
    }

    public static final int SFIXED32V_FIELD_NUMBER = 11;
    private int sfixed32V_;
    /**
     * <code>sfixed32 sfixed32v = 11;</code>
     * @return The sfixed32v.
     */
    @java.lang.Override
    public int getSfixed32V() {
      return sfixed32V_;
    }

    public static final int SFIXED64V_FIELD_NUMBER = 12;
    private long sfixed64V_;
    /**
     * <code>sfixed64 sfixed64v = 12;</code>
     * @return The sfixed64v.
     */
    @java.lang.Override
    public long getSfixed64V() {
      return sfixed64V_;
    }

    public static final int BOOLV_FIELD_NUMBER = 13;
    private boolean boolv_;
    /**
     * <code>bool boolv = 13;</code>
     * @return The boolv.
     */
    @java.lang.Override
    public boolean getBoolv() {
      return boolv_;
    }

    public static final int STRINGV_FIELD_NUMBER = 14;
    private volatile java.lang.Object stringv_;
    /**
     * <code>string stringv = 14;</code>
     * @return The stringv.
     */
    @java.lang.Override
    public java.lang.String getStringv() {
      java.lang.Object ref = stringv_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stringv_ = s;
        return s;
      }
    }
    /**
     * <code>string stringv = 14;</code>
     * @return The bytes for stringv.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStringvBytes() {
      java.lang.Object ref = stringv_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringv_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BYTESV_FIELD_NUMBER = 15;
    private com.google.protobuf.ByteString bytesv_;
    /**
     * <code>bytes bytesv = 15;</code>
     * @return The bytesv.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBytesv() {
      return bytesv_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Double.doubleToRawLongBits(doubleV_) != 0) {
        output.writeDouble(1, doubleV_);
      }
      if (java.lang.Float.floatToRawIntBits(floatv_) != 0) {
        output.writeFloat(2, floatv_);
      }
      if (int32V_ != 0) {
        output.writeInt32(3, int32V_);
      }
      if (int64V_ != 0L) {
        output.writeInt64(4, int64V_);
      }
      if (uint32V_ != 0) {
        output.writeUInt32(5, uint32V_);
      }
      if (uint64V_ != 0L) {
        output.writeUInt64(6, uint64V_);
      }
      if (sint32V_ != 0) {
        output.writeSInt32(7, sint32V_);
      }
      if (sint64V_ != 0L) {
        output.writeSInt64(8, sint64V_);
      }
      if (fixed32V_ != 0) {
        output.writeFixed32(9, fixed32V_);
      }
      if (fixed64V_ != 0L) {
        output.writeFixed64(10, fixed64V_);
      }
      if (sfixed32V_ != 0) {
        output.writeSFixed32(11, sfixed32V_);
      }
      if (sfixed64V_ != 0L) {
        output.writeSFixed64(12, sfixed64V_);
      }
      if (boolv_ != false) {
        output.writeBool(13, boolv_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stringv_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, stringv_);
      }
      if (!bytesv_.isEmpty()) {
        output.writeBytes(15, bytesv_);
      }
      if (largeseq_ != 0) {
        output.writeInt32(245, largeseq_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Double.doubleToRawLongBits(doubleV_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, doubleV_);
      }
      if (java.lang.Float.floatToRawIntBits(floatv_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, floatv_);
      }
      if (int32V_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, int32V_);
      }
      if (int64V_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, int64V_);
      }
      if (uint32V_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, uint32V_);
      }
      if (uint64V_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, uint64V_);
      }
      if (sint32V_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, sint32V_);
      }
      if (sint64V_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(8, sint64V_);
      }
      if (fixed32V_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, fixed32V_);
      }
      if (fixed64V_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(10, fixed64V_);
      }
      if (sfixed32V_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(11, sfixed32V_);
      }
      if (sfixed64V_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(12, sfixed64V_);
      }
      if (boolv_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, boolv_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stringv_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, stringv_);
      }
      if (!bytesv_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, bytesv_);
      }
      if (largeseq_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(245, largeseq_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.future.other.protocol.Hello.ProtocolTypes)) {
        return super.equals(obj);
      }
      com.future.other.protocol.Hello.ProtocolTypes other = (com.future.other.protocol.Hello.ProtocolTypes) obj;

      if (java.lang.Double.doubleToLongBits(getDoubleV())
          != java.lang.Double.doubleToLongBits(
              other.getDoubleV())) return false;
      if (java.lang.Float.floatToIntBits(getFloatv())
          != java.lang.Float.floatToIntBits(
              other.getFloatv())) return false;
      if (getInt32V()
          != other.getInt32V()) return false;
      if (getLargeseq()
          != other.getLargeseq()) return false;
      if (getInt64V()
          != other.getInt64V()) return false;
      if (getUint32V()
          != other.getUint32V()) return false;
      if (getUint64V()
          != other.getUint64V()) return false;
      if (getSint32V()
          != other.getSint32V()) return false;
      if (getSint64V()
          != other.getSint64V()) return false;
      if (getFixed32V()
          != other.getFixed32V()) return false;
      if (getFixed64V()
          != other.getFixed64V()) return false;
      if (getSfixed32V()
          != other.getSfixed32V()) return false;
      if (getSfixed64V()
          != other.getSfixed64V()) return false;
      if (getBoolv()
          != other.getBoolv()) return false;
      if (!getStringv()
          .equals(other.getStringv())) return false;
      if (!getBytesv()
          .equals(other.getBytesv())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOUBLEV_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDoubleV()));
      hash = (37 * hash) + FLOATV_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFloatv());
      hash = (37 * hash) + INT32V_FIELD_NUMBER;
      hash = (53 * hash) + getInt32V();
      hash = (37 * hash) + LARGESEQ_FIELD_NUMBER;
      hash = (53 * hash) + getLargeseq();
      hash = (37 * hash) + INT64V_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInt64V());
      hash = (37 * hash) + UINT32V_FIELD_NUMBER;
      hash = (53 * hash) + getUint32V();
      hash = (37 * hash) + UINT64V_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUint64V());
      hash = (37 * hash) + SINT32V_FIELD_NUMBER;
      hash = (53 * hash) + getSint32V();
      hash = (37 * hash) + SINT64V_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSint64V());
      hash = (37 * hash) + FIXED32V_FIELD_NUMBER;
      hash = (53 * hash) + getFixed32V();
      hash = (37 * hash) + FIXED64V_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFixed64V());
      hash = (37 * hash) + SFIXED32V_FIELD_NUMBER;
      hash = (53 * hash) + getSfixed32V();
      hash = (37 * hash) + SFIXED64V_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSfixed64V());
      hash = (37 * hash) + BOOLV_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBoolv());
      hash = (37 * hash) + STRINGV_FIELD_NUMBER;
      hash = (53 * hash) + getStringv().hashCode();
      hash = (37 * hash) + BYTESV_FIELD_NUMBER;
      hash = (53 * hash) + getBytesv().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.future.other.protocol.Hello.ProtocolTypes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.future.other.protocol.Hello.ProtocolTypes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.future.other.protocol.Hello.ProtocolTypes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.future.other.protocol.Hello.ProtocolTypes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.future.other.protocol.Hello.ProtocolTypes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.future.other.protocol.Hello.ProtocolTypes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.future.other.protocol.Hello.ProtocolTypes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.future.other.protocol.Hello.ProtocolTypes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.future.other.protocol.Hello.ProtocolTypes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.future.other.protocol.Hello.ProtocolTypes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.future.other.protocol.Hello.ProtocolTypes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.future.other.protocol.Hello.ProtocolTypes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.future.other.protocol.Hello.ProtocolTypes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ProtocolTypes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ProtocolTypes)
        com.future.other.protocol.Hello.ProtocolTypesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.future.other.protocol.Hello.internal_static_ProtocolTypes_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.future.other.protocol.Hello.internal_static_ProtocolTypes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.future.other.protocol.Hello.ProtocolTypes.class, com.future.other.protocol.Hello.ProtocolTypes.Builder.class);
      }

      // Construct using com.future.protocol.Hello.ProtocolTypes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        doubleV_ = 0D;

        floatv_ = 0F;

        int32V_ = 0;

        largeseq_ = 0;

        int64V_ = 0L;

        uint32V_ = 0;

        uint64V_ = 0L;

        sint32V_ = 0;

        sint64V_ = 0L;

        fixed32V_ = 0;

        fixed64V_ = 0L;

        sfixed32V_ = 0;

        sfixed64V_ = 0L;

        boolv_ = false;

        stringv_ = "";

        bytesv_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.future.other.protocol.Hello.internal_static_ProtocolTypes_descriptor;
      }

      @java.lang.Override
      public com.future.other.protocol.Hello.ProtocolTypes getDefaultInstanceForType() {
        return com.future.other.protocol.Hello.ProtocolTypes.getDefaultInstance();
      }

      @java.lang.Override
      public com.future.other.protocol.Hello.ProtocolTypes build() {
        com.future.other.protocol.Hello.ProtocolTypes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.future.other.protocol.Hello.ProtocolTypes buildPartial() {
        com.future.other.protocol.Hello.ProtocolTypes result = new com.future.other.protocol.Hello.ProtocolTypes(this);
        result.doubleV_ = doubleV_;
        result.floatv_ = floatv_;
        result.int32V_ = int32V_;
        result.largeseq_ = largeseq_;
        result.int64V_ = int64V_;
        result.uint32V_ = uint32V_;
        result.uint64V_ = uint64V_;
        result.sint32V_ = sint32V_;
        result.sint64V_ = sint64V_;
        result.fixed32V_ = fixed32V_;
        result.fixed64V_ = fixed64V_;
        result.sfixed32V_ = sfixed32V_;
        result.sfixed64V_ = sfixed64V_;
        result.boolv_ = boolv_;
        result.stringv_ = stringv_;
        result.bytesv_ = bytesv_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.future.other.protocol.Hello.ProtocolTypes) {
          return mergeFrom((com.future.other.protocol.Hello.ProtocolTypes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.future.other.protocol.Hello.ProtocolTypes other) {
        if (other == com.future.other.protocol.Hello.ProtocolTypes.getDefaultInstance()) return this;
        if (other.getDoubleV() != 0D) {
          setDoubleV(other.getDoubleV());
        }
        if (other.getFloatv() != 0F) {
          setFloatv(other.getFloatv());
        }
        if (other.getInt32V() != 0) {
          setInt32V(other.getInt32V());
        }
        if (other.getLargeseq() != 0) {
          setLargeseq(other.getLargeseq());
        }
        if (other.getInt64V() != 0L) {
          setInt64V(other.getInt64V());
        }
        if (other.getUint32V() != 0) {
          setUint32V(other.getUint32V());
        }
        if (other.getUint64V() != 0L) {
          setUint64V(other.getUint64V());
        }
        if (other.getSint32V() != 0) {
          setSint32V(other.getSint32V());
        }
        if (other.getSint64V() != 0L) {
          setSint64V(other.getSint64V());
        }
        if (other.getFixed32V() != 0) {
          setFixed32V(other.getFixed32V());
        }
        if (other.getFixed64V() != 0L) {
          setFixed64V(other.getFixed64V());
        }
        if (other.getSfixed32V() != 0) {
          setSfixed32V(other.getSfixed32V());
        }
        if (other.getSfixed64V() != 0L) {
          setSfixed64V(other.getSfixed64V());
        }
        if (other.getBoolv() != false) {
          setBoolv(other.getBoolv());
        }
        if (!other.getStringv().isEmpty()) {
          stringv_ = other.stringv_;
          onChanged();
        }
        if (other.getBytesv() != com.google.protobuf.ByteString.EMPTY) {
          setBytesv(other.getBytesv());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.future.other.protocol.Hello.ProtocolTypes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.future.other.protocol.Hello.ProtocolTypes) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double doubleV_ ;
      /**
       * <code>double doubleV = 1;</code>
       * @return The doubleV.
       */
      @java.lang.Override
      public double getDoubleV() {
        return doubleV_;
      }
      /**
       * <code>double doubleV = 1;</code>
       * @param value The doubleV to set.
       * @return This builder for chaining.
       */
      public Builder setDoubleV(double value) {
        
        doubleV_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double doubleV = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDoubleV() {
        
        doubleV_ = 0D;
        onChanged();
        return this;
      }

      private float floatv_ ;
      /**
       * <code>float floatv = 2;</code>
       * @return The floatv.
       */
      @java.lang.Override
      public float getFloatv() {
        return floatv_;
      }
      /**
       * <code>float floatv = 2;</code>
       * @param value The floatv to set.
       * @return This builder for chaining.
       */
      public Builder setFloatv(float value) {
        
        floatv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float floatv = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloatv() {
        
        floatv_ = 0F;
        onChanged();
        return this;
      }

      private int int32V_ ;
      /**
       * <code>int32 int32v = 3;</code>
       * @return The int32v.
       */
      @java.lang.Override
      public int getInt32V() {
        return int32V_;
      }
      /**
       * <code>int32 int32v = 3;</code>
       * @param value The int32v to set.
       * @return This builder for chaining.
       */
      public Builder setInt32V(int value) {
        
        int32V_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 int32v = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt32V() {
        
        int32V_ = 0;
        onChanged();
        return this;
      }

      private int largeseq_ ;
      /**
       * <code>int32 largeseq = 245;</code>
       * @return The largeseq.
       */
      @java.lang.Override
      public int getLargeseq() {
        return largeseq_;
      }
      /**
       * <code>int32 largeseq = 245;</code>
       * @param value The largeseq to set.
       * @return This builder for chaining.
       */
      public Builder setLargeseq(int value) {
        
        largeseq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 largeseq = 245;</code>
       * @return This builder for chaining.
       */
      public Builder clearLargeseq() {
        
        largeseq_ = 0;
        onChanged();
        return this;
      }

      private long int64V_ ;
      /**
       * <code>int64 int64v = 4;</code>
       * @return The int64v.
       */
      @java.lang.Override
      public long getInt64V() {
        return int64V_;
      }
      /**
       * <code>int64 int64v = 4;</code>
       * @param value The int64v to set.
       * @return This builder for chaining.
       */
      public Builder setInt64V(long value) {
        
        int64V_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 int64v = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt64V() {
        
        int64V_ = 0L;
        onChanged();
        return this;
      }

      private int uint32V_ ;
      /**
       * <code>uint32 uint32v = 5;</code>
       * @return The uint32v.
       */
      @java.lang.Override
      public int getUint32V() {
        return uint32V_;
      }
      /**
       * <code>uint32 uint32v = 5;</code>
       * @param value The uint32v to set.
       * @return This builder for chaining.
       */
      public Builder setUint32V(int value) {
        
        uint32V_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 uint32v = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUint32V() {
        
        uint32V_ = 0;
        onChanged();
        return this;
      }

      private long uint64V_ ;
      /**
       * <code>uint64 uint64v = 6;</code>
       * @return The uint64v.
       */
      @java.lang.Override
      public long getUint64V() {
        return uint64V_;
      }
      /**
       * <code>uint64 uint64v = 6;</code>
       * @param value The uint64v to set.
       * @return This builder for chaining.
       */
      public Builder setUint64V(long value) {
        
        uint64V_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 uint64v = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearUint64V() {
        
        uint64V_ = 0L;
        onChanged();
        return this;
      }

      private int sint32V_ ;
      /**
       * <code>sint32 sint32v = 7;</code>
       * @return The sint32v.
       */
      @java.lang.Override
      public int getSint32V() {
        return sint32V_;
      }
      /**
       * <code>sint32 sint32v = 7;</code>
       * @param value The sint32v to set.
       * @return This builder for chaining.
       */
      public Builder setSint32V(int value) {
        
        sint32V_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 sint32v = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSint32V() {
        
        sint32V_ = 0;
        onChanged();
        return this;
      }

      private long sint64V_ ;
      /**
       * <code>sint64 sint64v = 8;</code>
       * @return The sint64v.
       */
      @java.lang.Override
      public long getSint64V() {
        return sint64V_;
      }
      /**
       * <code>sint64 sint64v = 8;</code>
       * @param value The sint64v to set.
       * @return This builder for chaining.
       */
      public Builder setSint64V(long value) {
        
        sint64V_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 sint64v = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearSint64V() {
        
        sint64V_ = 0L;
        onChanged();
        return this;
      }

      private int fixed32V_ ;
      /**
       * <code>fixed32 fixed32v = 9;</code>
       * @return The fixed32v.
       */
      @java.lang.Override
      public int getFixed32V() {
        return fixed32V_;
      }
      /**
       * <code>fixed32 fixed32v = 9;</code>
       * @param value The fixed32v to set.
       * @return This builder for chaining.
       */
      public Builder setFixed32V(int value) {
        
        fixed32V_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed32 fixed32v = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearFixed32V() {
        
        fixed32V_ = 0;
        onChanged();
        return this;
      }

      private long fixed64V_ ;
      /**
       * <code>fixed64 fixed64v = 10;</code>
       * @return The fixed64v.
       */
      @java.lang.Override
      public long getFixed64V() {
        return fixed64V_;
      }
      /**
       * <code>fixed64 fixed64v = 10;</code>
       * @param value The fixed64v to set.
       * @return This builder for chaining.
       */
      public Builder setFixed64V(long value) {
        
        fixed64V_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed64 fixed64v = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearFixed64V() {
        
        fixed64V_ = 0L;
        onChanged();
        return this;
      }

      private int sfixed32V_ ;
      /**
       * <code>sfixed32 sfixed32v = 11;</code>
       * @return The sfixed32v.
       */
      @java.lang.Override
      public int getSfixed32V() {
        return sfixed32V_;
      }
      /**
       * <code>sfixed32 sfixed32v = 11;</code>
       * @param value The sfixed32v to set.
       * @return This builder for chaining.
       */
      public Builder setSfixed32V(int value) {
        
        sfixed32V_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed32 sfixed32v = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearSfixed32V() {
        
        sfixed32V_ = 0;
        onChanged();
        return this;
      }

      private long sfixed64V_ ;
      /**
       * <code>sfixed64 sfixed64v = 12;</code>
       * @return The sfixed64v.
       */
      @java.lang.Override
      public long getSfixed64V() {
        return sfixed64V_;
      }
      /**
       * <code>sfixed64 sfixed64v = 12;</code>
       * @param value The sfixed64v to set.
       * @return This builder for chaining.
       */
      public Builder setSfixed64V(long value) {
        
        sfixed64V_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed64 sfixed64v = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearSfixed64V() {
        
        sfixed64V_ = 0L;
        onChanged();
        return this;
      }

      private boolean boolv_ ;
      /**
       * <code>bool boolv = 13;</code>
       * @return The boolv.
       */
      @java.lang.Override
      public boolean getBoolv() {
        return boolv_;
      }
      /**
       * <code>bool boolv = 13;</code>
       * @param value The boolv to set.
       * @return This builder for chaining.
       */
      public Builder setBoolv(boolean value) {
        
        boolv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool boolv = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoolv() {
        
        boolv_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object stringv_ = "";
      /**
       * <code>string stringv = 14;</code>
       * @return The stringv.
       */
      public java.lang.String getStringv() {
        java.lang.Object ref = stringv_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stringv_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string stringv = 14;</code>
       * @return The bytes for stringv.
       */
      public com.google.protobuf.ByteString
          getStringvBytes() {
        java.lang.Object ref = stringv_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringv_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string stringv = 14;</code>
       * @param value The stringv to set.
       * @return This builder for chaining.
       */
      public Builder setStringv(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stringv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string stringv = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearStringv() {
        
        stringv_ = getDefaultInstance().getStringv();
        onChanged();
        return this;
      }
      /**
       * <code>string stringv = 14;</code>
       * @param value The bytes for stringv to set.
       * @return This builder for chaining.
       */
      public Builder setStringvBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stringv_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesv_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes bytesv = 15;</code>
       * @return The bytesv.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBytesv() {
        return bytesv_;
      }
      /**
       * <code>bytes bytesv = 15;</code>
       * @param value The bytesv to set.
       * @return This builder for chaining.
       */
      public Builder setBytesv(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bytesv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes bytesv = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearBytesv() {
        
        bytesv_ = getDefaultInstance().getBytesv();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ProtocolTypes)
    }

    // @@protoc_insertion_point(class_scope:ProtocolTypes)
    private static final com.future.other.protocol.Hello.ProtocolTypes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.future.other.protocol.Hello.ProtocolTypes();
    }

    public static com.future.other.protocol.Hello.ProtocolTypes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProtocolTypes>
        PARSER = new com.google.protobuf.AbstractParser<ProtocolTypes>() {
      @java.lang.Override
      public ProtocolTypes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProtocolTypes(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProtocolTypes> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProtocolTypes> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.future.other.protocol.Hello.ProtocolTypes getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ProtocolTypes_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ProtocolTypes_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013hello.proto\"\241\002\n\rProtocolTypes\022\017\n\007doubl" +
      "eV\030\001 \001(\001\022\016\n\006floatv\030\002 \001(\002\022\016\n\006int32v\030\003 \001(\005" +
      "\022\021\n\010largeseq\030\365\001 \001(\005\022\016\n\006int64v\030\004 \001(\003\022\017\n\007u" +
      "int32v\030\005 \001(\r\022\017\n\007uint64v\030\006 \001(\004\022\017\n\007sint32v" +
      "\030\007 \001(\021\022\017\n\007sint64v\030\010 \001(\022\022\020\n\010fixed32v\030\t \001(" +
      "\007\022\020\n\010fixed64v\030\n \001(\006\022\021\n\tsfixed32v\030\013 \001(\017\022\021" +
      "\n\tsfixed64v\030\014 \001(\020\022\r\n\005boolv\030\r \001(\010\022\017\n\007stri" +
      "ngv\030\016 \001(\t\022\016\n\006bytesv\030\017 \001(\014B\025\n\023com.future." +
      "protocolb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_ProtocolTypes_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ProtocolTypes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ProtocolTypes_descriptor,
        new java.lang.String[] { "DoubleV", "Floatv", "Int32V", "Largeseq", "Int64V", "Uint32V", "Uint64V", "Sint32V", "Sint64V", "Fixed32V", "Fixed64V", "Sfixed32V", "Sfixed64V", "Boolv", "Stringv", "Bytesv", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
